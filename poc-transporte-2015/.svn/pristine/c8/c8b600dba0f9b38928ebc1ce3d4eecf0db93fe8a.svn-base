'''
Created on 26/01/2015

@author: pcosta
'''
import pika
import codecs
import json
import sys
import pytz
from tweepy.streaming import StreamListener
from tweepy import OAuthHandler
from tweepy import Stream
from collections import namedtuple
local_tz = pytz.timezone('America/Sao_Paulo')

sys.argv.extend(['config.json'])

#This is a basic listener that just prints received tweets to stdout.
class StdOutListener(StreamListener):
    def __init__(self, config):
       self.rabbit = pika.BlockingConnection(pika.ConnectionParameters('127.0.0.1')) 

    def on_data(self, data):
        try:
            channel = self.rabbit.channel()
            channel.queue_declare(queue='tweet')
            channel.basic_publish(exchange='',routing_key='tweet',body=data)
            print data
            return True
        except:
            return False
    def on_error(self, status):
        print status


def main():
    #This handles Twitter authetification and the connection to Twitter Streaming API
    #Variables that contains the user credentials to access Twitter API
    if len(sys.argv) < 2:
        print "use python twitterExtractor.py <<arquivo_de_configuracao.json>>"
    else:
        # transforma json em objeto python
        json_config=codecs.open(sys.argv[1],"r")
        config = json.loads(json_config.read(), object_hook=lambda d: namedtuple('X', d.keys())(*d.values()))
        json_config.close();
        l = StdOutListener(config)
        auth = OAuthHandler(config.twitter.consumer_key, config.twitter.consumer_secret)
        auth.set_access_token(config.twitter.access_token, config.twitter.access_token_secret)
        stream = Stream(auth, l)

        #This line filter Twitter Streams to capture data by the keywords: 'python', 'javascript', 'ruby'
        stream.filter(track=config.twitter.filters.split(','))

if __name__ == '__main__':
    main()

